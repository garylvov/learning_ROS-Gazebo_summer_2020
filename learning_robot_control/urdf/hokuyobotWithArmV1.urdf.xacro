<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="kinectbot">

  <!--central box properties-->
  <xacro:property name="depthBox" value=".5" />
  <xacro:property name="widthBox" value=".3" />
  <xacro:property name="heightBox" value=".1" />
  <xacro:property name="densityBox" value="1000" />
  <!--post to elevate sensor properties-->
  <xacro:property name="depthPost" value=".1" />
  <xacro:property name="widthPost" value=".1" />
  <xacro:property name="heightPost" value=".1" />
  <xacro:property name="densityPost" value="100" />
  <!--wheel properties-->
  <xacro:property name="radiusCylinder" value=".1" />
  <xacro:property name="lengthCylinder" value=".05" />
  <xacro:property name="densityCylinder" value="100" />

  <!--box body-->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${depthBox} ${widthBox} ${heightBox}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 ${heightBox}"/>
    </visual>

    <collision>
      <geometry>
        <box size="${depthBox} ${widthBox} ${heightBox}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 ${heightBox}"/>
    </collision>

    <inertial>
      <mass value="${depthBox*widthBox*heightBox*densityBox}"/>
      <inertia
        ixx="${(depthBox*widthBox*heightBox*densityBox)/12*((heightBox*heightBox)+(depthBox*depthBox))}"
        ixy="0"
        ixz="0"
        iyy="${(depthBox*widthBox*heightBox*densityBox)/12*((widthBox*widthBox)+(depthBox*depthBox))}"
        iyz="0"
        izz="${(depthBox*widthBox*heightBox*densityBox)/12*((widthBox*widthBox)+(heightBox*heightBox))}"/>
    </inertial>
  </link>

  <!--Post to elevate sensor-->
    <link name="post">
      <visual>
        <geometry>
          <box size="${depthPost} ${widthPost} ${heightPost}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 0"/>
      </visual>

      <collision>
        <geometry>
          <box size="${depthPost} ${widthPost} ${heightPost}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 ${heightPost}"/>
      </collision>

      <inertial>
        <mass value="${depthPost*widthPost*heightPost*densityPost}"/>
        <inertia
          ixx="${(depthPost*widthPost*heightPost*densityPost)/12*((heightPost*heightPost)+(depthPost*depthPost))}"
          ixy="0"
          ixz="0"
          iyy="${(depthPost*widthPost*heightPost*densityPost)/12*((widthPost*widthPost)+(depthPost*depthPost))}"
          iyz="0"
          izz="${(depthPost*widthPost*heightPost*densityPost)/12*((widthPost*widthPost)+(heightPost*heightPost))}"/>
      </inertial>
    </link>

    <!--Xacro macro types for easily creating models of cylinders and rectangular prisms-->
    <xacro:macro name="cylinder" params="name orientation radius depth density">
      <link name="${name}">
        <visual>
          <geometry>
            <cylinder length="${depth}" radius="${radius}"/>
          </geometry>
          <origin rpy="${orientation} 0 0" xyz="0 0 0"/>
        </visual>

        <collision>
          <geometry>
            <cylinder length="${depth}" radius="${radius}"/>
          </geometry>
          <origin rpy="${orientation} 0 0" xyz="0 0 0"/>
        </collision>

        <inertial>
          <mass value="${(radius*radius*density)*3.1415}"/>
          <inertia
            ixx="${(((radius*radius*density)*3.1415)/12)*(3*(radius*radius)+(depth*depth))}"
            ixy="0"
            ixz="0"
            iyy="${(((radius*radius*density)*3.1415)/12)*(3*(radius*radius)+(depth*depth))}"
            iyz="0"
            izz="${(((radius*radius*density)*3.1415)/2)*(radius*radius)}"/>
        </inertial>
      </link>
    </xacro:macro>

    <xacro:macro name="box" params="name depth width height density">
      <link name="${name}">
        <visual>
          <geometry>
            <box size="${depth} ${width} ${height}"/>
          </geometry>
          <origin rpy="0 0 0" xyz="0 0 0"/>
        </visual>

        <collision>
          <geometry>
            <box size="${depth} ${width} ${height}"/>
          </geometry>
          <origin rpy="0 0 0" xyz="0 0 0"/>
        </collision>

        <inertial>
          <mass value="${depth*width*height*density}"/>
          <inertia
            ixx="${(depth*width*height*density)/12*((height*height)+(depth*depth))}"
            ixy="0"
            ixz="0"
            iyy="${(depth*width*height*density)/12*((width*width)+(depth*depth))}"
            iyz="0"
            izz="${(depth*width*height*density)/12*((width*width)+(height*height))}"/>
        </inertial>
      </link>
    </xacro:macro>

    <!--control plugin for joints-->
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/armV1</robotNamespace>
      </plugin>
    </gazebo>

      <!--links-->
      <xacro:property name="c11Depth" value=".15" />
      <xacro:property name="c11Width" value=".075" />
      <xacro:property name="c11Height" value=".15" />
      <xacro:box name="c11" depth="${c11Depth}" width="${c11Width}" height="${c11Height}" density="10"/>

      <xacro:property name="c12Radius" value=".05" />
      <xacro:property name="c12Depth" value=".025" />
      <xacro:cylinder name="c12" orientation="1.5707" radius="${c12Radius}" depth="${c12Depth}" density="10"/>

      <xacro:property name="c13Radius" value=".05" />
      <xacro:property name="c13Depth" value=".025" />
      <xacro:cylinder name="c13" orientation="1.5707" radius="${c13Radius}" depth="${c13Depth}" density="10"/>

      <xacro:property name="a1Depth" value=".05" />
      <xacro:property name="a1Width" value=".05" />
      <xacro:property name="a1Height" value=".5" />
      <xacro:box name="a1" depth="${a1Depth}" width="${a1Width}" height="${a1Height}" density="10"/>

      <xacro:property name="c21Radius" value=".025" />
      <xacro:property name="c21Depth" value=".025" />
      <xacro:cylinder name="c21" orientation="0" radius="${c21Radius}" depth="${c21Depth}" density="10"/>

      <xacro:property name="c22Radius" value=".025" />
      <xacro:property name="c22Depth" value=".025" />
      <xacro:cylinder name="c22" orientation="0" radius="${c22Radius}" depth="${c22Depth}" density="10"/>

      <xacro:property name="a2Depth" value=".35" />
      <xacro:property name="a2Width" value=".025" />
      <xacro:property name="a2Height" value=".05" />
      <xacro:box name="a2" depth="${a2Depth}" width="${a2Width}" height="${a2Height}" density="10"/>

      <xacro:property name="c31Depth" value=".1" />
      <xacro:property name="c31Width" value=".1" />
      <xacro:property name="c31Height" value=".005" />
      <xacro:box name="c31" depth="${c31Depth}" width="${c31Width}" height="${c31Height}" density="10"/>

      <xacro:property name="c32Depth" value=".1" />
      <xacro:property name="c32Width" value=".1" />
      <xacro:property name="c32Height" value=".005" />
      <xacro:box name="c32" depth="${c32Depth}" width="${c32Width}" height="${c32Height}" density="10"/>

      <xacro:property name="c33Radius" value=".009" />
      <xacro:property name="c33Depth" value=".05" />
      <xacro:cylinder name="c33" orientation="0" radius="${c33Radius}" depth="${c33Depth}" density="10"/>

      <xacro:property name="c34Radius" value=".009" />
      <xacro:property name="c34Depth" value=".05" />
      <xacro:cylinder name="c34" orientation="0" radius="${c34Radius}" depth="${c34Depth}" density="10"/>

      <link name="claw1">
        <visual>
          <geometry>
            <mesh filename="package://learning_robot_control/meshes/gripperV2.dae" scale="0.0075 0.0075 0.0075"/>
          </geometry>
          <origin rpy="1.5707 0 0" xyz="0 0 0"/>
        </visual>

        <collision>
          <geometry>
            <mesh filename="package://learning_robot_control/meshes/gripperV2.dae" scale="0.0075 0.0075 0.0075"/>
          </geometry>
          <origin rpy="1.5707 0 0" xyz="0 0 0"/>
        </collision>

        <inertial>
          <mass value="1"/>
          <inertia
            ixx=".01"
            ixy="0"
            ixz="0"
            iyy=".01"
            iyz="0"
            izz=".01"/>
        </inertial>
      </link>

      <link name="claw2">
        <visual>
          <geometry>
            <mesh filename="package://learning_robot_control/meshes/gripperV2.dae" scale="0.0075 0.0075 0.0075"/>
          </geometry>
          <origin rpy="1.5707 3.1415 3.1415" xyz="0 0 0"/>
        </visual>

        <collision>
          <geometry>
            <mesh filename="package://learning_robot_control/meshes/gripperV2.dae" scale="0.0075 0.0075 0.0075"/>
          </geometry>
          <origin rpy="1.5707 3.1415 3.1415" xyz="0 0 0"/>
        </collision>

        <inertial>
          <mass value="1"/>
          <inertia
            ixx=".01"
            ixy="0"
            ixz="0"
            iyy=".01"
            iyz="0"
            izz=".01"/>
        </inertial>
      </link>

    <!-- Hokuyo Laser -->
      <link name="hokuyo_link">
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
        <box size="0.01 0.01 0.01"/>
          </geometry>
        </collision>

        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <mesh filename="package://learning_robot_control/meshes/hokuyo.dae"/>
          </geometry>
        </visual>

        <inertial>
          <mass value="1e-5" />
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
      </link>

<gazebo reference="hokuyo_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/hokuyobot/laser/scan</topicName>
        <frameName>base_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!--algorithm for creating wheels and joints-->
  <xacro:macro name="wheel" params="prefix x y">
      <link name="${prefix}Wheel">
        <visual>
          <geometry>
          	<cylinder length="${lengthCylinder}" radius="${radiusCylinder}"/>
          </geometry>
          <origin rpy="1.5707 0 0" xyz="0 0 0"/>
        </visual>

        <collision>
          <geometry>
            <cylinder length="${lengthCylinder}" radius="${radiusCylinder}"/>
          </geometry>
          <origin rpy="1.5707 0 0" xyz="0 0 0"/>
        </collision>

     <inertial>
          <mass value="${(radiusCylinder*radiusCylinder)*3.1415}"/>
          <inertia
            ixx="${(((radiusCylinder*radiusCylinder)*3.1415)/12)*(3*(radiusCylinder*radiusCylinder)+(lengthCylinder*lengthCylinder))}"
            ixy="0"
            ixz="0"
            iyy="${(((radiusCylinder*radiusCylinder)*3.1415)/12)*(3*(radiusCylinder*radiusCylinder)+(lengthCylinder*lengthCylinder))}"
            iyz="0"
            izz="${(((radiusCylinder*radiusCylinder)*3.1415)/2)*(radiusCylinder*radiusCylinder)}"/>
        </inertial>
      </link>

      <joint name="${prefix}WheelJoint" type="continuous">
        <parent link="base_link"/>
        <child link="${prefix}Wheel"/>
        <axis xyz="0 ${((widthBox/2)+(lengthCylinder/2))} 0"/>
        <origin xyz="${((depthBox/2)-radiusCylinder)*x} ${((widthBox/2)+(lengthCylinder/2))*y} ${heightBox}"/>
      </joint>
  </xacro:macro>
  <!--Skid Steering Drive-->
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>100.0</updateRate>
      <robotNamespace>/hokuyobot</robotNamespace>
      <leftFrontJoint>leftFrontWheelJoint</leftFrontJoint>
      <rightFrontJoint>rightFrontWheelJoint</rightFrontJoint>
      <leftRearJoint>leftBackWheelJoint</leftRearJoint>
      <rightRearJoint>rightBackWheelJoint</rightRearJoint>
      <wheelSeparation>${(widthBox/2) + (lengthCylinder/2)}</wheelSeparation>
      <wheelDiameter>${radiusCylinder*2}</wheelDiameter>
      <robotBaseFrame>base_link</robotBaseFrame>
      <torque>20</torque>
      <topicName>cmd_vel</topicName>
      <broadcastTF>true</broadcastTF>
    </plugin>
  </gazebo>
  <!--Create wheels and joint to the main body using above algorithm-->
  <xacro:wheel prefix="rightFront" x="1" y="1"/>
  <xacro:wheel prefix="leftFront" x="1" y="-1"/>
  <xacro:wheel prefix="rightBack" x="-1" y="1"/>
  <xacro:wheel prefix="leftBack" x="-1" y="-1"/>

  <joint name="postToBody" type="fixed">
    <parent link="base_link"/>
    <child link="post"/>
    <origin xyz="0 0 ${(heightBox/2)+heightBox+(heightPost/2)}"/>
  </joint>

  <joint name="sensorToBody" type="fixed">
     <axis xyz="0 1 0"  rpy="0 0 0"/>
    <parent link="post"/>
    <child link="hokuyo_link"/>
    <origin xyz="0 0 .085"/>
  </joint>

  <joint name="c11ToBody" type="fixed">
    <parent link="base_link"/>
    <child link="c11"/>
    <origin xyz="${depthBox/2+c11Depth/2} 0 ${c11Height/2+heightBox/2}"/>
  </joint>

  <joint name="c12Toc11Joint" type="fixed">
    <parent link="c11"/>
    <child link="c12"/>
    <origin xyz="0 ${c12Depth/2+c11Width/2} 0"/>
  </joint>

  <joint name="c13Toc12Joint" type="continuous">
    <parent link="c12"/>
    <child link="c13"/>
    <axis xyz="0 ${c13Depth} 0"/>
    <origin xyz="0 ${c13Depth} 0"/>
  </joint>

  <joint name="a1Toc13Joint" type="fixed">
    <parent link="c13"/>
    <child link="a1"/>
    <origin xyz="0 ${c13Depth/2+a1Width/2} ${(a1Height/2)-c13Radius}"/>
  </joint>

  <joint name="c21toa1Joint" type="fixed">
    <parent link="a1"/>
    <child link="c21"/>
    <origin xyz="0 0 ${c21Depth/2+a1Height/2}"/>
  </joint>

  <joint name="c22Toc21Joint" type="continuous">
    <parent link="c21"/>
    <child link="c22"/>
    <axis xyz="0 0 ${c22Depth}"/>
    <origin xyz="0 0 ${c22Depth}"/>
  </joint>

  <joint name="a2Toc22Joint" type="fixed">
    <parent link="c22"/>
    <child link="a2"/>
    <origin xyz="${(a2Depth/2)-(c22Radius)} 0 ${(a2Height/2)+(c22Depth/2)}"/>
  </joint>

  <joint name="c31Toa2Joint" type="fixed">
    <parent link="a2"/>
    <child link="c31"/>
    <origin xyz="${a2Depth/2} 0 ${a2Height/2 + c31Height/2}"/>
  </joint>

  <joint name="c32Toa2Joint" type="fixed">
    <parent link="a2"/>
    <child link="c32"/>
    <origin xyz="${a2Depth/2} 0 ${(a2Height/2 + c32Height/2)*-1}"/>
  </joint>

  <joint name="c33Toc32Joint" type="fixed">
    <parent link="c32"/>
    <child link="c33"/>
    <origin xyz="${c32Width/3} ${c32Depth/3} ${c32Height/2 + c33Depth/2}"/>
  </joint>

  <joint name="c34Toc32Joint" type="fixed">
    <parent link="c32"/>
    <child link="c34"/>
    <origin xyz="${c32Width/3} ${c32Depth/-3} ${c32Height/2 + c34Depth/2}"/>
  </joint>

  <joint name="claw1Toc33Joint" type="continuous">
    <parent link="c33"/>
    <child link="claw1"/>
    <axis xyz="0 0 ${(c33Depth/-2) + .0075}"/>
    <origin xyz="0 0 ${(c33Depth/-2) + .0075}"/>
  </joint>

  <joint name="claw2Toc34Joint" type="continuous">
    <parent link="c34"/>
    <child link="claw2"/>
    <axis xyz="0 0 ${(c34Depth/2) - .0075}"/>
    <origin xyz="0 0 ${(c34Depth/2) - .0075}"/>
  </joint>

  <!--Actuators/transmissions for moving joints-->
  <transmission name="c13transmission">
    <type>transmission_interface/SimpleTransmission</type>
      <joint name="c13Toc12Joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
  <actuator name="c13Motor">
    <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
</transmission>

<transmission name="c22transmission">
  <type>transmission_interface/SimpleTransmission</type>
    <joint name="c22Toc21Joint">
    <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
<actuator name="c22Motor">
  <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
  <mechanicalReduction>1</mechanicalReduction>
</actuator>
</transmission>

</robot>
